; ModuleID = 're80'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [20 x i8] c"Usage: %s password\0A\00", align 1
@.str1 = private unnamed_addr constant [33 x i8] c"^H\86\B2\9B\CB\8E\08\E7\0Dv\98\D7,\ACm\9A|\EE\1B\0A8\E1\87`\BA:\DD\BD\0A\B6<\00", align 1
@.str2 = private unnamed_addr constant [17 x i8] c"PFpuQVgKNFCvpqA4\00", align 1
@.str3 = private unnamed_addr constant [17 x i8] c"Wrong password.\0A\00", align 1
@.str4 = private unnamed_addr constant [31 x i8] c"Good password, well played :)\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @_(i32* %____, i32* %__________________) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %__ = alloca i32, align 4
  %___ = alloca i32, align 4
  %______ = alloca i32, align 4
  %_______ = alloca i32, align 4
  %________ = alloca i32, align 4
  %_________ = alloca i32, align 4
  %__________ = alloca i32, align 4
  %___________ = alloca i32, align 4
  %i = alloca i32, align 4
  store i32* %____, i32** %1, align 8
  store i32* %__________________, i32** %2, align 8
  %3 = load i32*, i32** %1, align 8
  %4 = getelementptr inbounds i32, i32* %3, i64 0
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %__, align 4
  %6 = load i32*, i32** %1, align 8
  %7 = getelementptr inbounds i32, i32* %6, i64 1
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %___, align 4
  store i32 0, i32* %______, align 4
  store i32 -1640531527, i32* %_______, align 4
  %9 = load i32*, i32** %2, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 0
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %________, align 4
  %12 = load i32*, i32** %2, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 1
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %_________, align 4
  %15 = load i32*, i32** %2, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 2
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %__________, align 4
  %18 = load i32*, i32** %2, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 3
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %___________, align 4
  store i32 0, i32* %i, align 4
  br label %21

; <label>:21                                      ; preds = %58, %0
  %22 = load i32, i32* %i, align 4
  %23 = icmp ult i32 %22, 32
  br i1 %23, label %24, label %61

; <label>:24                                      ; preds = %21
  %25 = load i32, i32* %_______, align 4
  %26 = load i32, i32* %______, align 4
  %27 = add i32 %26, %25
  store i32 %27, i32* %______, align 4
  %28 = load i32, i32* %___, align 4
  %29 = shl i32 %28, 4
  %30 = load i32, i32* %________, align 4
  %31 = add i32 %29, %30
  %32 = load i32, i32* %___, align 4
  %33 = load i32, i32* %______, align 4
  %34 = add i32 %32, %33
  %35 = xor i32 %31, %34
  %36 = load i32, i32* %___, align 4
  %37 = lshr i32 %36, 5
  %38 = load i32, i32* %_________, align 4
  %39 = add i32 %37, %38
  %40 = xor i32 %35, %39
  %41 = load i32, i32* %__, align 4
  %42 = add i32 %41, %40
  store i32 %42, i32* %__, align 4
  %43 = load i32, i32* %__, align 4
  %44 = shl i32 %43, 4
  %45 = load i32, i32* %__________, align 4
  %46 = add i32 %44, %45
  %47 = load i32, i32* %__, align 4
  %48 = load i32, i32* %______, align 4
  %49 = add i32 %47, %48
  %50 = xor i32 %46, %49
  %51 = load i32, i32* %__, align 4
  %52 = lshr i32 %51, 5
  %53 = load i32, i32* %___________, align 4
  %54 = add i32 %52, %53
  %55 = xor i32 %50, %54
  %56 = load i32, i32* %___, align 4
  %57 = add i32 %56, %55
  store i32 %57, i32* %___, align 4
  br label %58

; <label>:58                                      ; preds = %24
  %59 = load i32, i32* %i, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %i, align 4
  br label %21

; <label>:61                                      ; preds = %21
  %62 = load i32, i32* %__, align 4
  %63 = load i32*, i32** %1, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 0
  store i32 %62, i32* %64, align 4
  %65 = load i32, i32* %___, align 4
  %66 = load i32*, i32** %1, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 1
  store i32 %65, i32* %67, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @____________(i32 %_____, i32 %________________________) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 %_____, i32* %1, align 4
  store i32 %________________________, i32* %2, align 4
  %3 = load i32, i32* %1, align 4
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %3, %4
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %1, align 4
  br label %10

; <label>:8                                       ; preds = %0
  %9 = load i32, i32* %2, align 4
  br label %10

; <label>:10                                      ; preds = %8, %6
  %11 = phi i32 [ %7, %6 ], [ %9, %8 ]
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define void @_____________(i8* %______________) #0 {
  %1 = alloca i8*, align 8
  store i8* %______________, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i8* %2)
  ret void
}

declare i32 @printf(i8*, ...) #1

; Function Attrs: nounwind uwtable
define i32 @main(i32 %_______________, i8** %________________) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %_________________ = alloca i8*, align 8
  %__________________ = alloca i8*, align 8
  %len__________________ = alloca i32, align 4
  %____________________ = alloca i32, align 4
  %aligned_____________________ = alloca i32, align 4
  %______________________ = alloca i32, align 4
  %_______________________ = alloca i8*, align 8
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  store i32 0, i32* %1
  store i32 %_______________, i32* %2, align 4
  store i8** %________________, i8*** %3, align 8
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str1, i32 0, i32 0), i8** %_________________, align 8
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str2, i32 0, i32 0), i8** %__________________, align 8
  %4 = load i32, i32* %2, align 4
  %5 = icmp ne i32 %4, 2
  br i1 %5, label %6, label %10

; <label>:6                                       ; preds = %0
  %7 = load i8**, i8*** %3, align 8
  %8 = getelementptr inbounds i8*, i8** %7, i64 0
  %9 = load i8*, i8** %8, align 8
  call void @_____________(i8* %9)
  store i32 1, i32* %1
  br label %94

; <label>:10                                      ; preds = %0
  %11 = load i8*, i8** %_________________, align 8
  %12 = call i64 @strlen(i8* %11) #5
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* %len__________________, align 4
  %14 = load i8**, i8*** %3, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 1
  %16 = load i8*, i8** %15, align 8
  %17 = call i64 @strlen(i8* %16) #5
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %____________________, align 4
  %19 = load i32, i32* %____________________, align 4
  %20 = load i32, i32* %____________________, align 4
  %21 = srem i32 %20, 8
  %22 = sub nsw i32 8, %21
  %23 = add nsw i32 %19, %22
  store i32 %23, i32* %aligned_____________________, align 4
  %24 = load i32, i32* %len__________________, align 4
  %25 = load i32, i32* %____________________, align 4
  %26 = icmp ne i32 %24, %25
  %27 = zext i1 %26 to i32
  store i32 %27, i32* %______________________, align 4
  %28 = load i32, i32* %aligned_____________________, align 4
  %29 = sext i32 %28 to i64
  %30 = call noalias i8* @malloc(i64 %29) #6
  store i8* %30, i8** %_______________________, align 8
  %31 = load i8*, i8** %_______________________, align 8
  %32 = load i32, i32* %aligned_____________________, align 4
  %33 = sext i32 %32 to i64
  call void @llvm.memset.p0i8.i64(i8* %31, i8 0, i64 %33, i32 1, i1 false)
  %34 = load i8*, i8** %_______________________, align 8
  %35 = load i8**, i8*** %3, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 1
  %37 = load i8*, i8** %36, align 8
  %38 = load i32, i32* %____________________, align 4
  %39 = sext i32 %38 to i64
  %40 = call i8* @strncpy(i8* %34, i8* %37, i64 %39) #6
  store i32 0, i32* %i, align 4
  br label %41

; <label>:41                                      ; preds = %55, %10
  %42 = load i32, i32* %i, align 4
  %43 = load i32, i32* %aligned_____________________, align 4
  %44 = sdiv i32 %43, 8
  %45 = icmp slt i32 %42, %44
  br i1 %45, label %46, label %58

; <label>:46                                      ; preds = %41
  %47 = load i8*, i8** %_______________________, align 8
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %i, align 4
  %50 = mul nsw i32 %49, 2
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %51
  %53 = load i8*, i8** %__________________, align 8
  %54 = bitcast i8* %53 to i32*
  call void @_(i32* %52, i32* %54)
  br label %55

; <label>:55                                      ; preds = %46
  %56 = load i32, i32* %i, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %i, align 4
  br label %41

; <label>:58                                      ; preds = %41
  store i32 0, i32* %i1, align 4
  br label %59

; <label>:59                                      ; preds = %82, %58
  %60 = load i32, i32* %i1, align 4
  %61 = load i32, i32* %len__________________, align 4
  %62 = load i32, i32* %____________________, align 4
  %63 = call i32 @____________(i32 %61, i32 %62)
  %64 = icmp slt i32 %60, %63
  br i1 %64, label %65, label %85

; <label>:65                                      ; preds = %59
  %66 = load i32, i32* %i1, align 4
  %67 = sext i32 %66 to i64
  %68 = load i8*, i8** %_________________, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %67
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  %72 = load i32, i32* %i1, align 4
  %73 = sext i32 %72 to i64
  %74 = load i8*, i8** %_______________________, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = icmp ne i32 %71, %77
  %79 = zext i1 %78 to i32
  %80 = load i32, i32* %______________________, align 4
  %81 = or i32 %80, %79
  store i32 %81, i32* %______________________, align 4
  br label %82

; <label>:82                                      ; preds = %65
  %83 = load i32, i32* %i1, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %i1, align 4
  br label %59

; <label>:85                                      ; preds = %59
  %86 = load i8*, i8** %_______________________, align 8
  call void @free(i8* %86) #6
  %87 = load i32, i32* %______________________, align 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %91

; <label>:89                                      ; preds = %85
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str3, i32 0, i32 0))
  br label %93

; <label>:91                                      ; preds = %85
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str4, i32 0, i32 0))
  br label %93

; <label>:93                                      ; preds = %91, %89
  store i32 0, i32* %1
  br label %94

; <label>:94                                      ; preds = %93, %6
  %95 = load i32, i32* %1
  ret i32 %95
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #3

; Function Attrs: nounwind
declare void @free(i8*) #3

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.6.2-1 (tags/RELEASE_362/final) (based on LLVM 3.6.2)"}
